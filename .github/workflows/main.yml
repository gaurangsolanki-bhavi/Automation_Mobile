name: Android Tests

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  android-tests:
    runs-on: macos-latest

    env:
      ANDROID_HOME: ${{ github.workspace }}/android-sdk

    steps:
      # 🧭 Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # ☕ Set up JDK 21
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      # ⚙️ Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      # 🧩 Install Allure CLI
      - name: Install Allure CLI
        run: npm install -g allure-commandline --save-dev

      # 📦 Install Android Command Line Tools
      - name: Install Android SDK and Tools
        run: |
          echo "📦 Downloading Android Command Line Tools..."
          mkdir -p $ANDROID_HOME/cmdline-tools
          cd $ANDROID_HOME/cmdline-tools
          curl -o tools.zip https://dl.google.com/android/repository/commandlinetools-mac-11076708_latest.zip
          unzip tools.zip
          mv cmdline-tools latest
          rm tools.zip

          echo "✅ Setting up PATH..."
          echo "export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$ANDROID_HOME/emulator:$PATH" >> $GITHUB_ENV

      # 🧱 Accept licenses & install SDKs
      - name: Accept Licenses & Install SDK Packages
        run: |
          source $GITHUB_ENV
          yes | sdkmanager --sdk_root=$ANDROID_HOME --licenses
          yes | sdkmanager --sdk_root=$ANDROID_HOME "platform-tools" "emulator" "platforms;android-28" "system-images;android-28;google_apis;x86_64"

      # 📱 Start Emulator and Run Tests
      - name: Launch Emulator & Run Tests
        run: |
          source $GITHUB_ENV
          echo "🧱 Creating AVD..."
          echo no | avdmanager create avd -n test -k "system-images;android-28;google_apis;x86_64" --force

          echo "📱 Starting Emulator..."
          nohup emulator -avd test -no-window -no-audio -no-snapshot -gpu swiftshader_indirect > /dev/null 2>&1 &

          echo "⏳ Waiting for Emulator to boot..."
          adb wait-for-device
          boot_completed=""
          until [ "$boot_completed" = "1" ]; do
            sleep 5
            boot_completed=$(adb shell getprop sys.boot_completed 2>/dev/null | tr -d '\r')
            echo "   ↪️ Boot completed = $boot_completed"
          done
          echo "✅ Emulator booted!"

          adb shell input keyevent 82
          adb shell settings put global window_animation_scale 0
          adb shell settings put global transition_animation_scale 0
          adb shell settings put global animator_duration_scale 0

          echo "🚀 Running Android tests..."
          npm run test android profile || true

      # 📊 Generate Allure Report
      - name: Generate Allure Report
        run: |
          mkdir -p allure-results
          mkdir -p allure-report
          npx allure generate allure-results --clean -o allure-report || echo "⚠️ No allure-results found."

      # 📤 Upload Allure Report
      - name: Upload Allure Report Artifact
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: allure-report

      # 🌐 (Optional) Deploy to GitHub Pages
      - name: Deploy Allure Report to GitHub Pages
        if: github.ref == 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./allure-report
          destination_dir: "allure-reports/${{ github.run_id }}"

      - name: Print Allure Report URL
        if: github.ref == 'refs/heads/main'
        run: |
          echo "✅ Allure Report published successfully!"
          echo "🔗 URL: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/allure-reports/${{ github.run_id }}/"

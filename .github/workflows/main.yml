name: Android Tests

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  android-tests:
    runs-on: macos-latest
    timeout-minutes: 30

    env:
      ANDROID_HOME: ${{ github.workspace }}/android-sdk

    steps:
      - name: 🧭 Checkout repository
        uses: actions/checkout@v4

      - name: ☕ Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: ⚙️ Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🧩 Install Allure CLI
        run: npm install -g allure-commandline --save-dev

      # ---------- Android SDK Setup ----------
      - name: 📦 Install Android SDK
        run: |
          echo "📦 Installing Android Command Line Tools..."
          mkdir -p $ANDROID_HOME/cmdline-tools
          cd $ANDROID_HOME/cmdline-tools
          curl -sS -o tools.zip https://dl.google.com/android/repository/commandlinetools-mac-11076708_latest.zip
          unzip -q tools.zip
          mv cmdline-tools latest
          rm tools.zip
          echo "✅ SDK Tools installed."

          echo "ANDROID_HOME=$ANDROID_HOME" >> $GITHUB_ENV
          echo "PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$ANDROID_HOME/emulator:$PATH" >> $GITHUB_ENV

      - name: 🧱 Accept Licenses & Install Packages
        run: |
          yes | sdkmanager --licenses
          yes | sdkmanager "platform-tools" "emulator" \
            "platforms;android-30" \
            "system-images;android-30;google_apis_playstore;x86_64"

      # ---------- Emulator Boot ----------
      - name: 📱 Launch Emulator & Run Tests
        run: |
          echo "🧱 Creating AVD..."
          echo no | avdmanager create avd -n test -k "system-images;android-30;google_apis_playstore;x86_64" --force

          echo "📱 Starting Emulator..."
          nohup emulator -avd test -no-window -no-audio -no-snapshot -accel off -gpu swiftshader_indirect >/dev/null 2>&1 &

          echo "⏳ Waiting for Emulator to boot..."
          boot_timeout=300
          booted="false"
          for i in $(seq 1 $boot_timeout); do
            if adb shell getprop sys.boot_completed 2>/dev/null | grep -q "1"; then
              echo "✅ Emulator booted!"
              booted="true"
              break
            fi
            sleep 2
            echo "⏳ Waiting... $i sec"
          done

          if [ "$booted" != "true" ]; then
            echo "❌ Emulator failed to boot within timeout!"
            adb -e logcat -d > emulator_logcat.txt || true
            exit 1
          fi

          adb devices
          #adb shell input keyevent 82
          adb shell settings put global window_animation_scale 0
          adb shell settings put global transition_animation_scale 0
          adb shell settings put global animator_duration_scale 0

          echo "🚀 Running Android tests..."
          npm run test android profile || true

      # ---------- Allure Reporting ----------
      - name: 📊 Generate Allure Report
        run: |
          mkdir -p allure-results
          mkdir -p allure-report
          npx allure generate allure-results --clean -o allure-report || echo "⚠️ No allure-results found."

      - name: 📤 Upload Allure Report
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: allure-report

      # ---------- Optional GitHub Pages ----------
      - name: 🌐 Deploy Allure Report to GitHub Pages
        if: github.ref == 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./allure-report
          destination_dir: "allure-reports/${{ github.run_id }}"

      - name: 🖥️ Print Allure Report URL
        if: github.ref == 'refs/heads/main'
        run: |
          echo "✅ Allure Report published successfully!"
          echo "🔗 URL: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/allure-reports/${{ github.run_id }}/"

name: Android Tests

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  android-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

        # ------------------ 📊 ALLURE REPORT SECTION ------------------
      - name: ⚙️ Install Allure CLI
        run: |
          npm install -g allure-commandline --save-dev

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3
        with:
          api-level: 35
          components: |
            platform-tools
            emulator
            platforms;android-35
            system-images;android-35;default;x86_64

      - name: Launch Emulator & Run Android Tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 35
          arch: x86_64
          force-avd-creation: true
          disable-animations: true
          emulator-options: -no-window -no-audio -gpu host
          cores: 8
          avd-name: test
          emulator-boot-timeout: 300000
          disable-linux-hw-accel: true
          script: |
            set -e

            echo "⏳ Waiting 1 minutes for emulator to initialize..."
            sleep 60

            # adb shell screenrecord /sdcard/testvideo.mp4 &
            # echo $! > screenrecord.pid
            # echo "🎥 Screen recording started."

            # adb shell input keyevent 82  # Unlock screen
            npm run test android profile || true 

            # Stop screen recording and pull
            # if [ -f screenrecord.pid ]; then
            #   kill -INT $(cat screenrecord.pid) || true
            #   sleep 2
            #   adb pull /sdcard/testvideo.mp4 testvideo.mp4 || true
            # fi

      # - name: 📥 Pull video from emulator
      #   run: |
      #     mkdir -p artifacts
      #     adb pull /sdcard/testvideo.mp4 artifacts/testvideo.mp4 || echo "⚠️ No video found on device."

      # - name: ⬆️ Upload test video
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: android-test-video
      #     path: artifacts/testvideo.mp4
      #     if-no-files-found: warn

      - name: 🧩 Generate Allure Report
        run: |
          mkdir -p allure-results
          mkdir -p allure-report
          npx allure generate allure-results --clean -o allure-report || echo "⚠️ No allure-results found."

      - name: ⬆️ Upload Allure Report (as artifact)
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: allure-report
          if-no-files-found: warn

        # (Optional) 📤 Publish Allure Report to GitHub Pages
      - name: 🚀 Deploy Allure Report to GitHub Pages
        if: github.ref == 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./allure-report
          destination_dir: "allure-reports/${{ github.run_id }}" # <-- unique folder per run

      - name: 🖥️ Print Allure Report URL
        if: github.ref == 'refs/heads/main'
        run: |
          echo "✅ Allure Report published successfully!"
          echo "🔗 URL: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/allure-reports/${{ github.run_id }}/"
